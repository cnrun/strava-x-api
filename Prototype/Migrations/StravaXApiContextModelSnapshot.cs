// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prototype.Model;

namespace Prototype.Migrations
{
    [DbContext(typeof(StravaXApiContext))]
    partial class StravaXApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Prototype.Model.ActivityShort", b =>
                {
                    b.Property<string>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActivityImageMapUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ActivityLastCrawled")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActivityTitle")
                        .HasColumnType("TEXT");

                    b.Property<int>("ActivityType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AthleteId")
                        .HasColumnType("TEXT");

                    b.HasKey("ActivityId");

                    b.ToTable("ActivityShortDB");
                });

            modelBuilder.Entity("Prototype.Model.AthleteConnection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AthleteShortAthleteId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConnectionState")
                        .HasColumnType("TEXT");

                    b.Property<string>("FromId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ToId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AthleteShortAthleteId");

                    b.ToTable("AthleteConnection");
                });

            modelBuilder.Entity("Prototype.Model.AthleteShort", b =>
                {
                    b.Property<string>("AthleteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AthleteAvatarUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("AthleteBadge")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AthleteLastCrawled")
                        .HasColumnType("TEXT");

                    b.Property<string>("AthleteLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("AthleteName")
                        .HasColumnType("TEXT");

                    b.HasKey("AthleteId");

                    b.ToTable("AthleteShortDB");
                });

            modelBuilder.Entity("Prototype.Model.AthleteConnection", b =>
                {
                    b.HasOne("Prototype.Model.AthleteShort", null)
                        .WithMany("Connections")
                        .HasForeignKey("AthleteShortAthleteId");
                });
#pragma warning restore 612, 618
        }
    }
}
